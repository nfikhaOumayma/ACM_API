# ===============================
# SERVICE PARAMS
# ===============================
server.port=8091
spring.application.name =parametrage-service

zuul.host.connect-timeout-millis=600000
zuul.host.socket-timeout-millis=600000
# ===============================
# DATA BASE PARAMS - SQL Server using Mssql-jdbc Driver
# ===============================
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://172.17.4.5:1433;databaseName=ACM_ZTM
spring.datasource.username=sa
spring.datasource.password=Talys@ztm123
spring.jpa.show-sql=false
spring.datasource.sql-script-encoding=UTF-8

#maximum number of milliseconds that a client will wait for a connection 30000ms (30 seconds)
spring.datasource.hikari.connectionTimeout = 60000
#maximum pool size
spring.datasource.hikari.maximumPoolSize=50
#maximum idle time for connection 600000 (10 min)
spring.datasource.hikari.idleTimeout=600000
# maximum lifetime in milliseconds of a connection in the pool after it is closed 1800000 (30 minutes).
spring.datasource.hikari.maxLifetime= 600000
## LOG debug TRACE
#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG 
#logging.level.com.zaxxer.hikari=TRACE

spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none

# Spring also automatically run batch jobs configured. To disable auto-run of jobs
spring.batch.job.enabled=false
spring.batch.initialize-schema=always 

# ===============================
# DEPLOIMENT CONFIG
# ===============================
eureka.instance.hostname=parametrage-service
spring.cloud.config.uri=http://config-service:8888
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/

# ===============================
# SECURITY CONFIG
# ===============================
security.oauth2.resource.user-info-uri=http://authentication-service:9999/users/principal

# ===============================
# Monitoring with prometheus and grafana 
# ===============================
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# ===============================
# CONFIG PROPERTIES
# ===============================
com.acm.storage-location= file:${user.home}/acm_reports

# ===============================
## MULTIPART (MultipartProperties)
# Enable multipart uploads
# ===============================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.location=${user.home}/ged/temp

# urlServeurAuthentification : URL env. ZTM
url.serveur.authentification=http://172.17.4.7:9999
# ===============================
##  cron scheduling (CONFIG ENV. RECETTE)
# ===============================
# "0 0/5 * * * ?" = run job Every 5 mins of every day.
cron.expression.loans.load=0 0/3 * * * ?

# "0 0 * * * *" = run job at the top of every hour from 8h to 19h of every day.
cron.expression.users.load=0 0 8-19 * * *
# ===============================
##  endpoint websocket
# ===============================
# urlEndpointWebsocket : uat ZTM
url.endpoint.websocket=http://172.17.4.7