# ===============================
# QUery Loan
# ===============================
query.select.from.culoan.where.statut=SELECT CULoan.CULoanID, CULoan.CommunityCULoanID, CUAccount.CUAccountID, CUAccount.AccountNumber, CULoan.ProductID, LoanProduct.code AS LOANPRODUCT_CODE, \
		LoanProduct.Description AS LOANPRODUCT_DESCRIPTION, \
		CASE WHEN (Customer.CustomerType != 1) THEN Customer.Name ELSE \
		(SELECT TOP 1 Person.Forename+'|'+Person.Surname FROM Person INNER JOIN CustomerPerson ON Person.PersonID=CustomerPerson.PersonID WHERE CustomerPerson.CustomerID=Customer.CustomerID) END AS CUSTOMER_NAME , \
		Customer.CustomerID, Customer.CustomerType AS CUSTOMER_TYPE, Currency.Symbol AS CURRENCY_SYMBOL, \
		Currency.DecimalPlaces AS CURRENCY_DECIMALPLACES, CULoan.ApplyDate AS APPLYDATE, CUAccount.CUAccountPortfolioID, CUAccountPortfolio.Code AS ACCOUNTPORTFOLIO_CODE, \
		CUAccountPortfolio.Description AS ACCOUNTPORTFOLIO_DESCRIPTION, \
		CuLoan.ApplyAmountTotal AS APPLY_AMOUNT_TOTAL, CULoan.CreationDate AS CREATION_DATE, CULoanPart.TermPeriodNum AS TERM_PERIOD, \
		PaymentPeriod.PaymentPeriodID AS PERIOD_FREQ, \
		CULoanPart.IssueDate AS ISSUE_DATE, \
		CULoanPart.IssueFeeAmount AS ISSUE_FEE_AMOUNT,  CULoanInterestRate.InterestRate AS PRODUCT_RATE, \
        CULoanPart.GracePeriod AS GRACEPERIOD, CUAccountIndustryCode.Code AS ACCOUNTINDUSTRYCODE_CODE, \
        CUAccountIndustryCode.Description AS ACCOUNTINDUSTRYCODE_DESCRIPTION, CUProductLoanReasons.Code AS PRODUCTLOANREASONS_CODE, CUProductLoanReasons.Description AS PRODUCTLOANREASONS_DESCRIPTION, CuLoan.STATUS, \
		CULoanPart.InitialPaymentDate, CULoanPart.NormalPayment, CULoanPart.IgnoreOddDays, CULoanPart.PeriodsDeferred, CULoanPart.CalculateInitialPaymentDate, CULoanPart.TermPeriodID, \
	    Branches.BranchID AS BRANCHID,Branches.name AS BRANCHE_NAME, Branches.Description AS BRANCHE_DESCRIPTION, CULoan.CULoanGuarantorSourceID as GUARANTOR_SOURCE_ID, \
		CULoan.LoanSourceOfFundsID as SOURCE_OF_FUNDS_ID, CULoan.CULoanRefinanceReasonID as REFINANCE_REASON_ID, CULoan.CULoanDistrictCodeID as DISTRICT_CODE_ID, CULoanPart.IntPayPeriodNum as INT_PAY_PERIOD_NUM , \
		CULoanPart.LoanCalculationType loanCalculationMode,CULoanPart.APR APR,CULoanPart.EffectiveIntRate EffectiveIntRate_EIR \
		FROM CULoan INNER JOIN CUAccount ON (CULoan.CUAccountID=CUAccount.CUAccountID) \
					INNER JOIN Customer ON (CULoan.CustomerID = Customer.CustomerID) \
					INNER JOIN LoanProduct ON (LoanProduct.ProductID = CULoan.ProductID) \
					INNER JOIN Currency ON (Currency.CurrencyID = LoanProduct.CurrencyID) \
					INNER JOIN CULoanPart ON (CULoanPart.CULoanID = CuLoan.CULoanID) \
					INNER JOIN CUProduct ON (CuLoan.ProductID = CUProduct.ProductID) \
					INNER JOIN CUProductLoanInterest ON (CUProduct.ProductID = CUProductLoanInterest.ProductID and CuLoan.ApplyDate between CUProductLoanInterest.StartDate and CUProductLoanInterest.EndDate) \
					INNER JOIN PaymentPeriod ON (PaymentPeriod.PaymentPeriodID = CULoanPart.PaymentPeriodID) \
					LEFT JOIN CUAccountIndustryCode ON (CUAccountIndustryCode.CUAccountIndustryCodeID = Cuaccount.CUAccountIndustryCodeID) \
					LEFT JOIN CUProductLoanReasons ON (CUProductLoanReasons.LoanReasonID = CULoan.LoanReasonID) \
					LEFT JOIN CUAccountPortfolio ON (CUAccountPortfolio.CUAccountPortfolioID = CUAccount.CUAccountPortfolioID) \
				    INNER JOIN Branches ON (customer.BranchID = Branches.BranchID) \
					INNER JOIN CULoanInterestRate  CULoanInterestRate ON CULoanInterestRate.CULoanPartID = CULoanPart.CULoanPartID \
		WHERE CULoan.Status=:statut and CULoan.CULoanID>:limite ORDER BY CULoan.CULoanID

# ========= get loan by account number
query.select.loan.by.account.number= SELECT CULoan.CULoanID, CULoan.CommunityCULoanID, CUAccount.CUAccountID, CUAccount.AccountNumber, CULoan.ProductID, LoanProduct.code AS LOANPRODUCT_CODE, \
		LoanProduct.Description AS LOANPRODUCT_DESCRIPTION, \
		CASE WHEN (Customer.CustomerType != 1) THEN Customer.Name ELSE \
		(SELECT TOP 1 Person.Forename+'|'+Person.Surname FROM Person INNER JOIN CustomerPerson ON Person.PersonID=CustomerPerson.PersonID WHERE CustomerPerson.CustomerID=Customer.CustomerID) END AS CUSTOMER_NAME , \
		Customer.CustomerID, Customer.CustomerType AS CUSTOMER_TYPE, Currency.Symbol AS CURRENCY_SYMBOL, \
		Currency.DecimalPlaces AS CURRENCY_DECIMALPLACES, CULoan.ApplyDate AS APPLYDATE, CUAccount.CUAccountPortfolioID, CUAccountPortfolio.Code AS ACCOUNTPORTFOLIO_CODE, \
		CUAccountPortfolio.Description AS ACCOUNTPORTFOLIO_DESCRIPTION, \
		CuLoan.ApplyAmountTotal AS APPLY_AMOUNT_TOTAL, CULoan.CreationDate AS CREATION_DATE, CULoanPart.TermPeriodNum AS TERM_PERIOD, \
		PaymentPeriod.PaymentPeriodID AS PERIOD_FREQ, \
		CULoanPart.IssueDate AS ISSUE_DATE, \
		CULoanPart.IssueFeeAmount AS ISSUE_FEE_AMOUNT,  CULoanInterestRate.InterestRate AS PRODUCT_RATE, \
        CULoanPart.GracePeriod AS GRACEPERIOD, CUAccountIndustryCode.Code AS ACCOUNTINDUSTRYCODE_CODE, \
        CUAccountIndustryCode.Description AS ACCOUNTINDUSTRYCODE_DESCRIPTION, CUProductLoanReasons.Code AS PRODUCTLOANREASONS_CODE, CUProductLoanReasons.Description AS PRODUCTLOANREASONS_DESCRIPTION, CuLoan.STATUS, \
		CULoanPart.InitialPaymentDate, CULoanPart.NormalPayment, CULoanPart.IgnoreOddDays, CULoanPart.PeriodsDeferred, CULoanPart.CalculateInitialPaymentDate, CULoanPart.TermPeriodID, \
	    Branches.BranchID AS BRANCHID,Branches.name AS BRANCHE_NAME, Branches.Description AS BRANCHE_DESCRIPTION, CULoan.CULoanGuarantorSourceID as GUARANTOR_SOURCE_ID, \
		CULoan.LoanSourceOfFundsID as SOURCE_OF_FUNDS_ID, CULoan.CULoanRefinanceReasonID as REFINANCE_REASON_ID, CULoan.CULoanDistrictCodeID as DISTRICT_CODE_ID, CULoanPart.IntPayPeriodNum as INT_PAY_PERIOD_NUM , \
		CULoanPart.LoanCalculationType loanCalculationMode,CULoanPart.APR APR,CULoanPart.EffectiveIntRate EffectiveIntRate_EIR \
		FROM CULoan INNER JOIN CUAccount ON (CULoan.CUAccountID=CUAccount.CUAccountID) \
					INNER JOIN Customer ON (CULoan.CustomerID = Customer.CustomerID) \
					INNER JOIN LoanProduct ON (LoanProduct.ProductID = CULoan.ProductID) \
					INNER JOIN Currency ON (Currency.CurrencyID = LoanProduct.CurrencyID)\
					INNER JOIN CULoanPart ON (CULoanPart.CULoanID = CuLoan.CULoanID) \
					INNER JOIN CUProduct ON (CuLoan.ProductID = CUProduct.ProductID) \
					INNER JOIN CUProductLoanInterest ON (CUProduct.ProductID = CUProductLoanInterest.ProductID and CuLoan.ApplyDate between CUProductLoanInterest.StartDate and CUProductLoanInterest.EndDate) \
					INNER JOIN PaymentPeriod ON (PaymentPeriod.PaymentPeriodID = CULoanPart.PaymentPeriodID) \
					LEFT JOIN CUAccountIndustryCode ON (CUAccountIndustryCode.CUAccountIndustryCodeID = Cuaccount.CUAccountIndustryCodeID) \
					LEFT JOIN CUProductLoanReasons ON (CUProductLoanReasons.LoanReasonID = CULoan.LoanReasonID) \
					LEFT JOIN CUAccountPortfolio ON (CUAccountPortfolio.CUAccountPortfolioID = CUAccount.CUAccountPortfolioID) \
				    INNER JOIN Branches ON (customer.BranchID = Branches.BranchID) \
					INNER JOIN CULoanInterestRate  CULoanInterestRate ON CULoanInterestRate.CULoanPartID = CULoanPart.CULoanPartID \
		WHERE CULoan.Status=:statut and CUAccount.AccountNumber=:accountNumber ORDER BY CULoan.CULoanID
query.select.loan.details=  SELECT CULoan.CULoanID, CULoan.CommunityCULoanID, CUAccount.CUAccountID, CUAccount.AccountNumber, CULoan.ProductID, LoanProduct.code AS LOANPRODUCT_CODE, \
		LoanProduct.Description AS LOANPRODUCT_DESCRIPTION, CASE WHEN (Customer.CustomerType != 1) THEN Customer.Name ELSE \
		(SELECT TOP 1 Person.Forename+'|'+Person.Surname FROM Person INNER JOIN CustomerPerson ON Person.PersonID=CustomerPerson.PersonID WHERE CustomerPerson.CustomerID=Customer.CustomerID) END AS CUSTOMER_NAME , \
		Customer.CustomerID, Customer.CustomerType AS CUSTOMER_TYPE, Currency.Symbol AS CURRENCY_SYMBOL, \
		Currency.DecimalPlaces AS CURRENCY_DECIMALPLACES, CULoan.ApplyDate AS APPLYDATE, CUAccount.CUAccountPortfolioID, CUAccountPortfolio.Code AS ACCOUNTPORTFOLIO_CODE, \
		CUAccountPortfolio.Description AS ACCOUNTPORTFOLIO_DESCRIPTION, CULoan.CULoanGuarantorSourceID as GUARANTOR_SOURCE_ID, \
		CULoan.LoanSourceOfFundsID as SOURCE_OF_FUNDS_ID, CULoan.CULoanRefinanceReasonID as REFINANCE_REASON_ID, CULoan.CULoanDistrictCodeID as DISTRICT_CODE_ID, CULoanPart.IntPayPeriodNum as INT_PAY_PERIOD_NUM, \
		CuLoan.ApplyAmountTotal AS APPLY_AMOUNT_TOTAL, CULoan.CreationDate AS CREATION_DATE, CULoanPart.TermPeriodNum AS TERM_PERIOD, PaymentPeriod.PaymentPeriodID AS PERIOD_FREQ, CULoanPart.IssueDate AS ISSUE_DATE, \
		CULoanPart.IssueFeeAmount AS ISSUE_FEE_AMOUNT,  \
		(SELECT TOP 1 InterestRate FROM CULoanInterestRate WHERE CULoanPart.CULoanPartID=CULoanInterestRate.CULoanPartID ORDER BY StartDate DESC) AS PRODUCT_RATE,  \
        CULoanPart.GracePeriod AS GRACEPERIOD, CUAccountIndustryCode.Code AS ACCOUNTINDUSTRYCODE_CODE, \
        CUAccountIndustryCode.Description AS ACCOUNTINDUSTRYCODE_DESCRIPTION, CUProductLoanReasons.Code AS PRODUCTLOANREASONS_CODE, CUProductLoanReasons.Description AS PRODUCTLOANREASONS_DESCRIPTION, CuLoan.STATUS, \
		CULoanPart.InitialPaymentDate, CULoanPart.NormalPayment, CULoanPart.IgnoreOddDays, CULoanPart.PeriodsDeferred, CULoanPart.CalculateInitialPaymentDate, CULoanPart.TermPeriodID, \
	    Branches.BranchID AS BRANCHID,Branches.name AS BRANCHE_NAME, Branches.Description AS BRANCHE_DESCRIPTION , \
	    CULoanPart.LoanCalculationType loanCalculationMode,CULoanPart.APR APR,CULoanPart.EffectiveIntRate EffectiveIntRate_EIR \
		FROM CULoan INNER JOIN CUAccount ON (CULoan.CUAccountID=CUAccount.CUAccountID) \
					INNER JOIN Customer ON (CULoan.CustomerID = Customer.CustomerID) \
					INNER JOIN LoanProduct ON (LoanProduct.ProductID = CULoan.ProductID) \
					INNER JOIN Currency ON (Currency.CurrencyID = LoanProduct.CurrencyID) \
					INNER JOIN CULoanPart ON (CULoanPart.CULoanID = CuLoan.CULoanID) \
					INNER JOIN CUProduct ON (CuLoan.ProductID = CUProduct.ProductID) \
					INNER JOIN PaymentPeriod ON (PaymentPeriod.PaymentPeriodID = CULoanPart.PaymentPeriodID) \
					LEFT JOIN CUAccountIndustryCode ON (CUAccountIndustryCode.CUAccountIndustryCodeID = Cuaccount.CUAccountIndustryCodeID)  \
					LEFT JOIN CUProductLoanReasons ON (CUProductLoanReasons.LoanReasonID = CULoan.LoanReasonID) \
					LEFT JOIN CUAccountPortfolio ON (CUAccountPortfolio.CUAccountPortfolioID = CUAccount.CUAccountPortfolioID) \
				    INNER JOIN Branches ON (customer.BranchID = Branches.BranchID) \
		WHERE CuLoan.CULoanID=:id_loan 

query.select.loan.guarantor=SELECT CULoanGuarantor.CULoanID,CULoanGuarantor.CustomerID, Person.Forename+' '+Person.Surname as Name,Convert(date,Customer.OpenDate,103) RegistrationDate, \
	(SELECT Branches.Name FROM Branches WHERE Customer.BranchID=Branches.BranchID) Branch, DATEDIFF(YEAR,Person.DateOfBirth,GETDATE()) Age, Address.Address1,Address.Address2,Address.Address3, \
	Address.TownCity,Address.County,Address.State,Address.PostalCode,Address.Country, CULoanGuarantor.OutstandingBalance,CULoanGuarantor.Amount, \
 	(SELECT Currency.Code FROM Currency WHERE CULoanGuarantor.CurrencyID=Currency.CurrencyID) Currency, \
 	(SELECT CULoanGuarantorType.Code FROM CULoanGuarantorType WHERE CULoanGuarantor.CULoanGuarantorTypeID=CULoanGuarantorType.CULoanGuarantorTypeID) GuarantorType \
 	from CULoanGuarantor \
 	INNER JOIN Customer on Customer.CustomerID=CULoanGuarantor.CustomerID \
 	INNER JOIN CustomerPerson on CustomerPerson.CustomerID=Customer.CustomerID \
 	INNER JOIN Person on Person.PersonID=CustomerPerson.PersonID \
 	INNER JOIN Address on Address.AddressID=CULoanGuarantor.AddressID  \
 	WHERE CULoanGuarantor.CULoanID=:id_loan

query.select.loan.collateral=SELECT   CULoanID,Person.Forename+' '+Person.Surname as FullName,Convert(date,Customer.OpenDate,103) RegistrationDate, \
  (SELECT Branches.Name FROM Branches WHERE Customer.BranchID=Branches.BranchID) Branch, DATEDIFF(YEAR,Person.DateOfBirth,GETDATE()) Age, \
  Address.Address1,Address.Address2,Address.Address3,Address.TownCity,Address.County,Address.State,Address.PostalCode,Address.Country, \
  CULoanCollateral.Reference,CULoanCollateral.Description, (SELECT CULoanCollateralType.Code FROM CULoanCollateralType WHERE CULoanCollateralType.CULoanCollateralTypeID=CULoanCollateral.CULoanCollateralTypeID) CollateralType, \
  CULoanCollateral.OriginalGrossValue,CULoanCollateral.GrossValue,CULoanCollateral.RealisedValue,CULoanCollateral.FixedCost,CULoanCollateral.NetValue \
  FROM CULoanCollateral \
  INNER JOIN Customer on Customer.CustomerID=CULoanCollateral.CustomerID \
  INNER JOIN CustomerPerson on CustomerPerson.CustomerID=Customer.CustomerID \
  INNER JOIN Person on Person.PersonID=CustomerPerson.PersonID \
  INNER JOIN CustomerAddress on CustomerAddress.CustomerID=Customer.CustomerID \
  INNER JOIN Address on Address.AddressID=CustomerAddress.AddressID \
  INNER JOIN AddressType on AddressType.AddressTypeID=CustomerAddress.AddressTypeID \
  WHERE CULoanCollateral.Active=1 AND CULoanCollateral.ValueDate < ISNULL(CustomerAddress.DateMovedOut,CONVERT(datetime,'2060-12-31',101)) \
  AND AddressType.DefaultItem=1 AND CULoanCollateral.CULoanID=:id_loan
  
query.select.all.loan.collateral=SELECT   CULoanID,Person.Forename+' '+Person.Surname as FullName,Convert(date,Customer.OpenDate,103) RegistrationDate, \
  (SELECT Branches.Name FROM Branches WHERE Customer.BranchID=Branches.BranchID) Branch, DATEDIFF(YEAR,Person.DateOfBirth,GETDATE()) Age, \
  Address.Address1,Address.Address2,Address.Address3,Address.TownCity,Address.County,Address.State,Address.PostalCode,Address.Country, \
  CULoanCollateral.Reference,CULoanCollateral.Description, (SELECT CULoanCollateralType.Code FROM CULoanCollateralType WHERE CULoanCollateralType.CULoanCollateralTypeID=CULoanCollateral.CULoanCollateralTypeID) CollateralType, \
  CULoanCollateral.OriginalGrossValue,CULoanCollateral.GrossValue,CULoanCollateral.RealisedValue,CULoanCollateral.FixedCost,CULoanCollateral.NetValue \
  FROM CULoanCollateral \
  INNER JOIN Customer on Customer.CustomerID=CULoanCollateral.CustomerID \
  INNER JOIN CustomerPerson on CustomerPerson.CustomerID=Customer.CustomerID \
  INNER JOIN Person on Person.PersonID=CustomerPerson.PersonID \
  INNER JOIN CustomerAddress on CustomerAddress.CustomerID=Customer.CustomerID \
  INNER JOIN Address on Address.AddressID=CustomerAddress.AddressID \
  INNER JOIN AddressType on AddressType.AddressTypeID=CustomerAddress.AddressTypeID \
  WHERE CULoanCollateral.ValueDate < ISNULL(CustomerAddress.DateMovedOut,CONVERT(datetime,'2060-12-31',101)) \
  AND AddressType.DefaultItem=1 AND CULoanCollateral.CULoanID in (:id_loans)
  
query.select.loan.Schedule=SELECT CULoanSchedule.Period AS PERIOD, CULoanSchedule.RepaymentDate AS REPAYMENT_DATE, CAST(CULoanSchedule.TotalRepayment AS float) AS TOTAL_REPAYMENT, \
	CAST(CULoanSchedule.LoanRepayment AS float) AS LOAN_REPAYMENT, CAST(CULoanSchedule.InterestRepayment AS float) AS INTEREST_REPAYMENT, \
	CAST(CULoanSchedule.Balance AS float) AS BALANCE \
	FROM CULoan \
	inner join CULoanPart on (CULoan.CULoanID = CULoanPart.CULoanID) \
	inner join CULoanSchedule on (CULoanPart.CULoanPartID = CULoanSchedule.CULoanPartID) WHERE CULoan.CULoanID =:id_loan

query.select.loan.process.setting=SELECT CUProductID PRODUCT_ID, (SELECT Code FROM CUProduct WHERE CUProduct.ProductID=CUProductLoanProcesses.CUProductID) PRODUCT_CDOE, \
		Code PROCESS_CODE,Description PROCESS_DESCRIPTION, Required PROCESS_REQUIRED, CUProductLoanProcessesID, MenuKey ,Apply ,Approve \
		FROM CUProductLoanProcesses WHERE CUProductLoanProcesses.CUProductID=:id_product

query.select.financial.analysis=select ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=1),0) CurrentAssets, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=2),0) FixedAssets, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (1,2)),0) Assets, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=3),0) CurrentLiabilities, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=4),0) FixedLiabilities, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (3,4)),0) TotalLiabilities, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (1,2)),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (3,4)),0) Equity, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0) MonthlySales, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0) CotsOFGoodSold, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0) GrossProfit, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=7),0) MonthlyExpense, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=7),0) NetProfit, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=8),0) OtherIncome, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=9),0) FamilyExpense, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=8),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=9),0) + \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=7),0) HouseholdSurplus, \
	ISNULL(CULoan.ExcludedAssets,0) ExcludedAssets ,ISNULL(CULoan.CollateralAmount,0) CollateralAmount, CULoan.ApplyAmountTotal,  \
	(select TOP 1 RepaymentDate from CULoanSchedule where CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID order by ScheduleID desc) MaturityDate, \
	(select COUNT(*) from CULoanSchedule where CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID) LoanTerm, \
	CULoanPart.NormalPayment Installement, \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=1),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=3),0) WorkingCapital, \
	CASE WHEN ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0)=0 THEN 0 ELSE \
	1-(ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0)/ \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0)) END Grossmargin, \
	CASE WHEN ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (1,2)),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (3,4)),0) = 0 THEN 0 ELSE  \
	(CULoan.ApplyAmountTotal+ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (3,4)),0))/ \
	(ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (1,2)),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID in (3,4)),0)) END Debt_Equity, \
	CASE WHEN ISNULL((select  SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink inner join CustomerFinancialCategory on CustomerFinancialCategory.CustomerFinancialCategoryID=CustomerFinancialAnalaysisLink.CustomerFinancialCategoryID \
	 where CustomerFinancialAnalaysisLink.CategoryID=1 and CustomerFinancialCategory.Inventory=1 and CULoanID=CULoan.CULoanID),0) =0 THEN 0 ELSE \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0) / \
	ISNULL((select  SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink inner join CustomerFinancialCategory on CustomerFinancialCategory.CustomerFinancialCategoryID=CustomerFinancialAnalaysisLink.CustomerFinancialCategoryID \
	 where CustomerFinancialAnalaysisLink.CategoryID=1 and CustomerFinancialCategory.Inventory=1 and CULoanID=CULoan.CULoanID),0) END Inventory_Turnover, \
	 CASE WHEN ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=8),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=9),0) + \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=7),0) = 0 THEN 0 ELSE \
	CULoanPart.NormalPayment/(ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=8),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=9),0) + \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=5),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=6),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=7),0)) END Installment_Coverage, \
	CASE WHEN ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=1),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=3),0) =0 THEN 0 ELSE \
	CULoan.ApplyAmountTotal/(ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=1),0) - \
	ISNULL((select SUM(CustomerFinancialAnalaysisLink.Value) from CustomerFinancialAnalaysisLink where CustomerFinancialAnalaysisLink.CULoanID=CULoan.CULoanID and CategoryID=3),0)) END Loan_Recommendation, \
	CASE WHEN CULoan.ApplyAmountTotal=0 THEN 0 ELSE ISNULL(CULoan.CollateralAmount,0)/CULoan.ApplyAmountTotal END Guarantor_Coverage from CULoan inner join CULoanPart on CULoan.CULoanID=CULoanPart.CULoanID where CULoan.CULoanID =:id_loan

query.select.loan.process=SELECT CULoanProcess.CULoanProcessID,CULoanProcess.CULoanID,CULoanProcess.Completed,CULoanProcess.LoanApprovalGroup, \
	(SELECT Customer.CustomerType FROM Customer WHERE Customer.CustomerID=CULoan.CustomerID) CustomerType,	CULoan.CommunityCULoanID \
	FROM CULoanProcess \
	INNER JOIN CULoan ON CULoan.CULoanID = CULoanProcess.CULoanID \
	INNER JOIN CUProductLoanProcesses ON CULoanProcess.CUProductLoanProcessesID=CUProductLoanProcesses.CUProductLoanProcessesID \
	WHERE CULoanProcess.cuLoanID IN (SELECT CULoanID FROM CULoan WHERE CULoanID=:id_loan OR CommunityCULoanID=:id_loan) \
	ORDER BY  CULoanProcessID ASC

query.select.loan.status.issued=SELECT culoan.CULoanID, culoan.productID , culoan.customerID, CULoanPart.IssueDate FROM culoan \
	INNER JOIN CULoanPart on (culoan.CULoanID = CULoanPart.CULoanID) \
	WHERE status = 4 AND culoan.CULoanID IN (:list_id_loan)

query.select.loan.status.canceled=SELECT CULoanID, productID , customerID FROM culoan WHERE status = 64

# ===============================
# QUery custumer
# ===============================
query.select.custumer=SELECT TOP 1 Customer.CustomerID AS CUSTOMERID, Customer.Number AS CUSTOMER_NUMBER,(SELECT Person.Forename+'|'+Person.Surname FROM Person INNER JOIN CustomerPerson ON Person.PersonID=CustomerPerson.PersonID WHERE CustomerPerson.CustomerID=Customer.CustomerID) AS CUSTOMER_NAME,Customer.OpenDate AS CUSTOMER_OPENDATE, \
	Customer.AltName, customer.CorrespondenceName, Person.PersonID, Person.EMail, \
	CASE WHEN CustomerType!=1 THEN NULL ELSE Person.DateOfBirth END AS DATEOFBIRTH,\
	CASE WHEN CustomerType!=1 THEN NULL ELSE Round(DATEDIFF(MONTH,Person.DateOfBirth,GETDATE())/12,0) END AS AGE,\
	CASE WHEN CustomerType=4 THEN (SELECT Telephone1 FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone1 END Telephone1,\
	CASE WHEN CustomerType=4 THEN (SELECT Telephone2 FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone2 END Telephone2,\
	CASE WHEN CustomerType=4 THEN (SELECT Fax FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone3 END Telephone3,\
	CUAccountPortfolio.CUAccountPortfolioID AS ACCOUNTPORTFOLIOID,\
	CUAccountPortfolio.Code AS PORTFOLIO_CODE, \
    CUAccountPortfolio.Description AS PORTFOLIO_DESCRIPTION, \
    Address.Address1+' '+ Address.Address2+' '+ Address.Address3+' '+Address.TownCity+' '+Address.County+' '+Address.State+' '+Address.PostalCode+' '+Address.Country AS CUSTOMER_ADDRESS,\
    Branches.BranchID AS BRANCHID,	Branches.name AS BRANCHE_NAME,	Branches.Description AS BRANCHE_DESCRIPTION,customerType as CUSTOMER_TYPE, 	OrganisationID  AS ORGANISATION_ID, \
    CASE WHEN Person.Gender = 1 THEN 'F' \
		 WHEN Person.Gender = 0 THEN 'M'  \
	END AS GENDER \
    FROM customer INNER JOIN Branches ON (customer.BranchID = Branches.BranchID) \
    LEFT JOIN CustomerPerson ON (CustomerPerson.CustomerID = customer.CustomerID) \
    LEFT JOIN Person ON (Person.PersonID = CustomerPerson.PersonID) \
    LEFT JOIN CUAccountPortfolio ON (CUAccountPortfolio.CUAccountPortfolioID = customer.DefaultCUAccountPortfolioID) \
    INNER JOIN CustomerAddress ON (CustomerAddress.CustomerID = customer.CustomerID) \
    INNER JOIN Address ON (Address.AddressID = CustomerAddress.AddressID) \
    INNER JOIN AddressType ON (CustomerAddress.AddressTypeID = AddressType.AddressTypeID and AddressType.PrimaryAddressType =1) \
	WHERE customer.CustomerID=:id_customer
	
# ======================
query.select.customers.for.batch=SELECT Customer.CustomerID AS CUSTOMERID, Customer.Number AS CUSTOMER_NUMBER,(SELECT Person.Forename+'|'+Person.Surname FROM Person INNER JOIN CustomerPerson ON Person.PersonID=CustomerPerson.PersonID WHERE CustomerPerson.CustomerID=Customer.CustomerID) AS CUSTOMER_NAME,Customer.OpenDate AS CUSTOMER_OPENDATE, \
	Customer.AltName, customer.CorrespondenceName, Person.PersonID, Person.EMail, \
	CASE WHEN CustomerType!=1 THEN NULL ELSE Person.DateOfBirth END AS DATEOFBIRTH,\
	CASE WHEN CustomerType!=1 THEN NULL ELSE Round(DATEDIFF(MONTH,Person.DateOfBirth,GETDATE())/12,0) END AS AGE,\
	CASE WHEN CustomerType=4 THEN (SELECT Telephone1 FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone1 END Telephone1,\
	CASE WHEN CustomerType=4 THEN (SELECT Telephone2 FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone2 END Telephone2,\
	CASE WHEN CustomerType=4 THEN (SELECT Fax FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone3 END Telephone3,\
	CUAccountPortfolio.CUAccountPortfolioID AS ACCOUNTPORTFOLIOID,\
	CUAccountPortfolio.Code AS PORTFOLIO_CODE, \
    CUAccountPortfolio.Description AS PORTFOLIO_DESCRIPTION, \
    Address.Address1+' '+ Address.Address2+' '+ Address.Address3+' '+Address.TownCity+' '+Address.County+' '+Address.State+' '+Address.PostalCode+' '+Address.Country AS CUSTOMER_ADDRESS,\
    Branches.BranchID AS BRANCHID,	Branches.name AS BRANCHE_NAME,	Branches.Description AS BRANCHE_DESCRIPTION,customerType as CUSTOMER_TYPE, 	OrganisationID  AS ORGANISATION_ID, \
    CASE WHEN Person.Gender = 1 THEN 'F' \
		 WHEN Person.Gender = 0 THEN 'M'  \
	END AS GENDER \
    FROM customer INNER JOIN Branches ON (customer.BranchID = Branches.BranchID) \
    LEFT JOIN CustomerPerson ON (CustomerPerson.CustomerID = customer.CustomerID) \
    LEFT JOIN Person ON (Person.PersonID = CustomerPerson.PersonID) \
    LEFT JOIN CUAccountPortfolio ON (CUAccountPortfolio.CUAccountPortfolioID = customer.DefaultCUAccountPortfolioID) \
    INNER JOIN CustomerAddress ON (CustomerAddress.CustomerID = customer.CustomerID) \
    INNER JOIN Address ON (Address.AddressID = CustomerAddress.AddressID) \
    INNER JOIN AddressType ON (CustomerAddress.AddressTypeID = AddressType.AddressTypeID and AddressType.PrimaryAddressType =1) \
	WHERE customer.CustomerID>:id_customer
	
query.select.custumer.loan =  SELECT Customer.CustomerID AS CUSTOMERID, Customer.Number AS CUSTOMER_NUMBER, customer.AltName, customer.CorrespondenceName, \
	 (SELECT Person.Forename+'|'+Person.Surname FROM Person INNER JOIN CustomerPerson ON Person.PersonID=CustomerPerson.PersonID WHERE CustomerPerson.CustomerID=Customer.CustomerID) AS CUSTOMER_NAME, Customer.OpenDate AS CUSTOMER_OPENDATE, \
	 Person.DateOfBirth AS DATEOFBIRTH, Round(DATEDIFF(MONTH,Person.DateOfBirth,GETDATE())/12,0) AS AGE, \
	 Person.Telephone1, Person.Telephone2, Person.Telephone3, CUAccountPortfolio.CUAccountPortfolioID AS ACCOUNTPORTFOLIOID, \
	 CUAccountPortfolio.Code AS PORTFOLIO_CODE, CUAccountPortfolio.Description AS PORTFOLIO_DESCRIPTION, \
	 Address.Address1+' '+ Address.Address2+' '+ Address.Address3+' '+Address.TownCity+' '+Address.County+' '+Address.State+' '+Address.PostalCode+' '+Address.Country AS CUSTOMER_ADDRESS, \
	 Branches.BranchID AS BRANCHID, Person.PersonID, Person.EMail, \
	 Branches.name AS BRANCHE_NAME, Branches.Description AS BRANCHE_DESCRIPTION, ISNULL(ACM_CUSTOMER_KPI_Arrears.ArrearDay,0) AS ARREARDAY , ISNULL(ACM_CUSTOMER_KPI_Arrears.ArrearSchedule,0) AS ARREARSCHEDULE , \
     CASE WHEN Person.Gender = 1 THEN 'F' \
		 WHEN Person.Gender = 0 THEN 'M'  \
	 END AS GENDER \
	 FROM Customer \
	 LEFT JOIN ACM_CUSTOMER_KPI_Arrears ON ACM_CUSTOMER_KPI_Arrears.CustomerID=Customer.CustomerID \
	 INNER JOIN Branches ON (customer.BranchID = Branches.BranchID) \
	 LEFT JOIN CustomerPerson ON (CustomerPerson.CustomerID = customer.CustomerID) \
	 LEFT JOIN Person ON (Person.PersonID = CustomerPerson.PersonID) \
	 INNER JOIN CustomerAddress ON (CustomerAddress.CustomerID = customer.CustomerID) \
	 INNER JOIN Address ON (Address.AddressID = CustomerAddress.AddressID ) \
	 INNER JOIN AddressType ON (CustomerAddress.AddressTypeID = AddressType.AddressTypeID and AddressType.PrimaryAddressType =1) \
	 INNER JOIN CULoan ON ( CULoan.CustomerID = customer.CustomerID) \
	 INNER JOIN CUAccount ON ( CUAccount.CUAccountID = CULoan.CUAccountID) \
	 LEFT JOIN CUAccountPortfolio ON (CUAccountPortfolio.CUAccountPortfolioID = CUAccount.CUAccountPortfolioID)\
     WHERE CULoan.CULoanID=:id_loan
     
query.select.custumer.all=SELECT Customer.CustomerID AS CUSTOMERID, Customer.Number AS CUSTOMER_NUMBER, \
	(SELECT Person.Forename+'|'+Person.Surname FROM Person INNER JOIN CustomerPerson ON Person.PersonID=CustomerPerson.PersonID WHERE CustomerPerson.CustomerID=Customer.CustomerID) AS CUSTOMER_NAME, \
	Customer.OpenDate AS CUSTOMER_OPENDATE,\
	Customer.AltName, customer.CorrespondenceName, Person.PersonID, Person.EMail, \
		CASE WHEN CustomerType!=1 THEN NULL ELSE Person.DateOfBirth END AS DATEOFBIRTH, \
		CASE WHEN CustomerType!=1 THEN NULL ELSE Round(DATEDIFF(MONTH,Person.DateOfBirth,GETDATE())/12,0) END AS AGE, \
		CASE WHEN CustomerType=4 THEN (SELECT Telephone1 FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone1 END Telephone1, \
		CASE WHEN CustomerType=4 THEN (SELECT Telephone2 FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone2 END Telephone2, \
		CASE WHEN CustomerType=4 THEN (SELECT Fax FROM Organisation WHERE Organisation.OrganisationID=Customer.OrganisationID) ELSE Person.Telephone3 END Telephone3, \
	CUAccountPortfolio.CUAccountPortfolioID AS ACCOUNTPORTFOLIOID, \
	CUAccountPortfolio.Code AS PORTFOLIO_CODE, \
	CUAccountPortfolio.Description AS PORTFOLIO_DESCRIPTION, \
	Address.Address1+' '+ Address.Address2+' '+ Address.Address3+' '+Address.TownCity+' '+Address.County+' '+Address.State+' '+Address.PostalCode+' '+Address.Country AS CUSTOMER_ADDRESS, \
	Branches.BranchID AS BRANCHID, Branches.name AS BRANCHE_NAME, Branches.Description AS BRANCHE_DESCRIPTION,customerType as CUSTOMER_TYPE, OrganisationID AS ORGANISATION_ID, \
    CASE WHEN Person.Gender = 1 THEN 'F' \
		 WHEN Person.Gender = 0 THEN 'M'  \
	END AS GENDER \
	FROM customer \
	INNER JOIN Branches ON (customer.BranchID = Branches.BranchID) \
	LEFT JOIN CustomerPerson ON (CustomerPerson.CustomerID = customer.CustomerID) \
	LEFT JOIN Person ON (Person.PersonID = CustomerPerson.PersonID) \
	LEFT JOIN CUAccountPortfolio ON (CUAccountPortfolio.CUAccountPortfolioID = customer.DefaultCUAccountPortfolioID) \
	INNER JOIN CustomerAddress ON (CustomerAddress.CustomerID = customer.CustomerID) \
	INNER JOIN Address ON (Address.AddressID = CustomerAddress.AddressID) \
	WHERE CustomerAddress.CustomerAddressID = (SELECT MIN(CustomerAddressID) FROM CustomerAddress CA WHERE CA.CustomerID=Customer.CustomerID)   

query.select.custumer.account=SELECT CUAccount.CustomerID, CULoan.CULoanID, CUAccount.AccountNumber + ' - ' + (SELECT CUProduct.Code FROM CUProduct WHERE CUProduct.ProductID=CUAccount.ProductID) Accouunt, CULoanPart.IssueAmount, CULoanPart.IssueDate, (SELECT CUAccountPortfolio.Code FROM CUAccountPortfolio WHERE CUAccountPortfolio.CUAccountPortfolioID=CUAccount.CUAccountPortfolioID) PortfolioID, CULoan.Status, \
    (SELECT CUAccountRating.Code FROM CUAccountRating WHERE CUAccountRating.CUAccountRatingID=CUAccount.CUAccountRatingID) AccountRating, \
    CASE \
	  WHEN CULoan.Status =1 Then CULoan.ApplyAmountTotal  \
	  WHEN CULoan.Status =2 Then CULoan.ApproveAmountTotal \
	  ELSE CUAccount.DRAmount-CUAccount.CRAmount \
    END Balance, \
    CAST(CASE \
           WHEN \
           culoan.Status = 4 AND cuaccount.Active = 1 \
           and (select count(*) from CULoan where CUAccount.CUAccountID = CULoan.CUAccountID and status in (1, 2)) = 0 \
             THEN 1 \
             ELSE 0 \
             END AS bit) as CanTopup \
    FROM CUAccount \
    INNER JOIN CULoan ON CULoan.CUAccountID=CUAccount.CUAccountID INNER JOIN CULoanPart ON CULoan.CULoanID=CULoanPart.CULoanID WHERE CULoan.CustomerID = (SELECT CustomerID FROM CULoan WHERE CULoanID= :id_loan ) and CULoan.CULoanID !=:id_loan 

query.select.custumer.account.by.customer=SELECT Currency.Code  as currencyCode,CUAccount.CUAccountID, CUAccount.CustomerID, CULoan.CULoanID,(SELECT CUProduct.ProductID FROM CUProduct WHERE CUProduct.ProductID=CUAccount.ProductID ) ProductID, \
 CUAccount.AccountNumber + ' - ' + (SELECT CUProduct.Code FROM CUProduct WHERE CUProduct.ProductID=CUAccount.ProductID) Accouunt, CULoanPart.IssueAmount, CULoanPart.IssueDate, (SELECT CUAccountPortfolio.Code FROM CUAccountPortfolio WHERE CUAccountPortfolio.CUAccountPortfolioID=CUAccount.CUAccountPortfolioID) PortfolioID, CULoan.Status, \
    (SELECT CUAccountRating.Code FROM CUAccountRating WHERE CUAccountRating.CUAccountRatingID=CUAccount.CUAccountRatingID) AccountRating, \
    CASE \
      WHEN CULoan.Status =1 Then CULoan.ApplyAmountTotal  \
	  WHEN CULoan.Status =2 Then CULoan.ApproveAmountTotal \
	  ELSE CUAccount.DRAmount-CUAccount.CRAmount \
    END Balance, \
      CAST(CASE \
           WHEN \
           culoan.Status = 4 AND cuaccount.Active = 1 \
           and (select count(*) from CULoan where CUAccount.CUAccountID = CULoan.CUAccountID and status in (1, 2)) = 0 \
             THEN 1 \
             ELSE 0 \
             END AS bit) as CanTopup \
    FROM CUAccount \
    INNER JOIN CULoan ON CULoan.CUAccountID=CUAccount.CUAccountID INNER JOIN CULoanPart ON CULoan.CULoanID=CULoanPart.CULoanID \
    INNER JOIN CUProduct ON CUProduct.ProductID = CULoan.ProductID   \
    INNER JOIN Currency ON Currency.CurrencyID = CUProduct.CurrencyID  \
	WHERE CULoan.CustomerID =:id_customer  

query.select.closing.balance.by.idloan = SELECT CUAccount.DRAmount-CUAccount.CRAmount BALANCE \
    FROM CUAccount \
    INNER JOIN CULoan ON CULoan.CUAccountID=CUAccount.CUAccountID \
	WHERE CULoanID =:id_loan
	
query.select.custumer.account.active.by.customer=SELECT CUAccount.CustomerID,CULoan.CULoanID  FROM CUAccount \
    INNER JOIN CULoan ON CULoan.CUAccountID=CUAccount.CUAccountID INNER JOIN CULoanPart ON CULoan.CULoanID=CULoanPart.CULoanID \
	WHERE Culoan.paid = 0 and culoan.status < 64 and CULoan.CustomerID =:id_customer


query.select.custumer.account.Schedule=SELECT CULoanSchedule.Period, CULoanSchedule.TotalRepayment, \
	CULoanSchedule.RepaymentDate, CULoanSchedule.InterestRepayment, \
	CULoanSchedule.InterestAmtPaid, CULoanSchedule.LoanRepayment, \
	CULoanSchedule.LoanRepaymentPaid, CULoanSchedule.Balance, \
	CASE \
	WHEN CULoanSchedule.AllPaid=1 OR CULoan.Status in (16,32) THEN 1 \
	WHEN CULoanSchedule.LoanRepayment=CULoanSchedule.LoanRepaymentPaid AND CULoanSchedule.LoanRepayment+CULoanSchedule.LoanRepaymentPaid !=0 THEN 1 \
	WHEN CULoanSchedule.InterestAmtPaid!=0 OR CULoanSchedule.LoanRepaymentPaid !=0 THEN 2 ELSE 3 \
	END Status,  \
	dbo.ACM_GETRealRepaymentDate(CUAccount.CUAccountID,CULoanPart.CULoanPartID,CULoanSchedule.Period,CULoanSchedule.RepaymentDate) RepaidOn, \
	CASE WHEN DATEDIFF(DAY,CULoanSchedule.RepaymentDate,dbo.ACM_GETRealRepaymentDate(CUAccount.CUAccountID,CULoanPart.CULoanPartID,CULoanSchedule.Period,CULoanSchedule.RepaymentDate))<0 THEN 0 \
	ELSE DATEDIFF(DAY,CULoanSchedule.RepaymentDate,dbo.ACM_GETRealRepaymentDate(CUAccount.CUAccountID,CULoanPart.CULoanPartID,CULoanSchedule.Period,CULoanSchedule.RepaymentDate)) END NBArrearsDays  \
	FROM CUAccount INNER JOIN CULoan ON CULoan.CUAccountID=CUAccount.CUAccountID \
	INNER JOIN CULoanPart ON CULoanPart.CULoanID=CULoan.CULoanID \
	INNER JOIN CULoanSchedule ON CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID WHERE CULoan.CULoanID=:id_loan

query.select.custumer.members.group=SELECT CommunityID, CustomerID, (SELECT code from CURole WHERE CustomerRole=CURoleID) CustomerRole \
		FROM CustomerCommunity WHERE CommunityID=:id_customer


query.select.custumer.members.organisation= SELECT 	Organisation.CustomerID OrganisationID \
	,(SELECT CP1.CustomerID FROM CustomerPerson CP1 WHERE CP1.PersonID= \
	 (SELECT TOP 1 PersonID FROM CustomerPerson CP2 WHERE CP2.CustomerID=Organisation.CustomerID) AND CP1.CustomerID IN (SELECT CustomerID from Customer where CustomerType=1)) CustomerID \
	FROM Customer Organisation \
	WHERE Organisation.CustomerType=4 and CustomerID=:id_customer
		
query.select.custumer.relationship=SELECT CustomerID , childCustomerID , Relationship.RelationshipID, Relationship.name \
		FROM customerRelationship , Relationship \
		WHERE Relationship.RelationshipID = customerRelationship.RelationshipID \
		AND CustomerID=:id_customer		
		
query.select.customer.arrears = SELECT CustomerID CUSTOMERID, \
	AVG(ArriearsDay) ARREARDAY, \
	SUM(ArrearsInstallments) ARREARSCHEDULE \
	FROM ACM_Customer_Stat \
	WHERE CustomerID=:id_customer group by CustomerID

query.select.active.account.customer.loan = select COUNT(*) AS ACTIVE_ACCOUNT from CULoan l \
	join CUAccount c on \
	l.CUAccountID = c.CUAccountID \
	where l.CUAccountID in (:id_account) \
	and c.Active = 1 \


query.aml.check.paiyment.customer =SELECT distinct CULoanSchedule.RepaymentDate, Customer.Name'Customer_Name', CULoan.CULoanID,Customer.Number'Customer_Number', CULoanSchedule.Period, CULoanSchedule.balance, CULoanPart.TermPeriodNum,\
		CASE \
			WHEN CULoanSchedule.LoanRepayment != CULoanSchedule.LoanRepaymentPaid and CULoanSchedule.AllPaid = 0 THEN 'Not_yet_Paid' \
		ELSE (select convert(nvarchar,min(ValueDate),103) from CUTransaction where CUAccountID=CUAccount.CUAccountID and TransactionTypeID in (4,32) and ReversalReceiptNo=0 and balance <= CULoanSchedule.Balance) \
		END'Paid_On' \
	FROM \
		CULoanSchedule \
		INNER JOIN CULoanPart ON CULoanPart.CULoanPartID=CULoanSchedule.CULoanPartID \
		INNER JOIN CULoan ON CULoan.CULoanID=CULoanPart.CULoanID \
		INNER JOIN CUAccount ON CUAccount.CUAccountID=CULoan.CUAccountID \
		INNER JOIN CUTransaction ON CUTransaction.CUAccountID=CUAccount.CUAccountID \
		INNER JOIN Customer ON Customer.CustomerID=CUAccount.CustomerID \
	WHERE CUAccount.Active=0 AND Customer.Number =:customer_number AND CULoanPart.TermPeriodNum > 4 \
	ORDER BY CULoan.CULoanID, Period

# ===============================
# QUery users 
# ===============================
query.select.users=select users.UserName AS UserName, users.UserID AS UserID, users.CUAccountPortfolioID AS CUAccountPortfolioID , users.UserProfileID AS UserProfileID , users.SupervisorUserID AS SupervisorUserID, users.active AS active, users.BranchID AS BranchID, \
	Branches.name AS BRANCHE_NAME, Branches.Description AS BRANCHE_DESCRIPTION from users INNER JOIN Branches ON (users.BranchID = Branches.BranchID) \
	WHERE Expired=0 and UserID>:limite ORDER BY UserID
	
# ===============================
# QUery Product 
# ===============================
query.select.product.term.balance = select MaximumBalance as MAXIMUMBALANCE, \
	MinimumTerm as MINIMUMTERM, \
	MaximumTerm as MAXIMUMTERM \
	from CUProductLoan \
	where ProductID =:id_product
	
query.select.all.product = SELECT CUProduct.ProductID, CUProduct.Code, CUProduct.Description, CUProduct.ProductTypeID, CUProduct.Active, \
	MaximumBalance as MAXIMUMBALANCE, MinimumTerm as MINIMUMTERM, MaximumTerm as MAXIMUMTERM , CUProductLoan.UseScheduleInterest, CUProductLoan.CapitaliseInterestWhenRefinancing,  \
	 CUProductLoanInterest.StartDate AS RateStartDate, CUProductLoanInterest.EndDate AS RateEndDate,  \
	(SELECT top 1 FeePercentage FROM CUFeeBand WHERE CUFeeBand.CUFeeID=CUProductLoan.IssueFeeID) IssueFeepercentage1,  \
	(SELECT FeePercentage FROM CUFeeBand WHERE CUFeeBand.CUFeeID=CUProductLoan.IssueFeeID1) IssueFeepercentage2,  \
	(SELECT FeePercentage FROM CUFeeBand WHERE CUFeeBand.CUFeeID=CUProductLoan.IssueFeeID2) IssueFeepercentage3,  \
	(SELECT FeePercentage FROM CUFeeBand WHERE CUFeeBand.CUFeeID=CUProductLoan.IssueFeeID3) IssueFeepercentage4,  \
	CUProductLoan.MaximumMemAge as MAXIMUMMEMAGE,  \
	CUProductLoan.MinimumMemAge as MINIMUMMEMAGE,  \
	CUProduct.MaxAccounts as MAXACCOUNTS,  \
	CUProductLoan.MaximumDeferredPeriod as MAXIMUMDEFERREDPERIOD,  \
	CUProductLoan.MinimumDeferredPeriod as MINIMUMDEFERREDPERIOD,  \
	Currency.Symbol CURRENCY, Currency.DecimalPlaces, CUProduct.CreationDate, CUProduct.EditDate ,InsuranceProductID cuInsuranceID,  \
	(SELECT VATRate FROM CUFee WHERE CUFee.CUFeeID = CUProductLoan.IssueFeeID) IssueFeeVAT1,  \
	(SELECT VATRate FROM CUFee WHERE CUFee.CUFeeID=CUProductLoan.IssueFeeID1) IssueFeeVAT2,  \
	CASE WHEN CUProductLoan.GroupLoansOnly=0 THEN 'INDIV / ORG' ELSE 'GRP' END CustomerType,  \
	ISNULL((SELECT TOP 1 CUInsuranceRate.Rate FROM CUInsuranceRate WHERE CUInsuranceRate.CUInsuranceID=CUProductLoan.InsuranceProductID),0) InsuranceVat,  \
	CASE \
	WHEN Rounding=0 THEN 'UP' \
	WHEN Rounding=1 THEN 'DOWN' \
	WHEN Rounding=2 THEN 'ROUND' ELSE 'DONT ROUND' END ROUND_TYPE, \
	(SELECT Amount FROM CUFee WHERE CUFee.CUFeeID=CUProductLoan.IssueFeeID) ISSUEFEEAMOUNT1, \
    (SELECT Amount FROM CUFee WHERE CUFee.CUFeeID=CUProductLoan.IssueFeeID1) ISSUEFEEAMOUNT2, \
    CASE \
	WHEN CUProductLoan.CalculateEIRfromFlatinterestRate = 0 THEN \
	CASE \
        WHEN CUProductLoan.FlatRateIntRate IS NOT NULL AND CUProductLoan.FlatRateIntRate <> 0 \
		THEN CUProductLoan.FlatRateIntRate \
        WHEN (CUProductLoanInterest.BaseRate + CUProductLoanInterest.Rate) IS NOT NULL AND (CUProductLoanInterest.BaseRate + CUProductLoanInterest.Rate) <> 0 \
		THEN (CUProductLoanInterest.BaseRate + CUProductLoanInterest.Rate)  end \
	END Rate, \
	CASE \
	WHEN CUProductLoan.CalculateEIRfromFlatinterestRate = 1 THEN  \
CASE \
        WHEN CUProductLoan.FlatRateIntRate IS NOT NULL AND CUProductLoan.FlatRateIntRate <> 0  \
		THEN CUProductLoan.FlatRateIntRate  \
        WHEN (CUProductLoanInterest.BaseRate + CUProductLoanInterest.Rate) IS NOT NULL AND (CUProductLoanInterest.BaseRate + CUProductLoanInterest.Rate) <> 0  \
		THEN (CUProductLoanInterest.BaseRate + CUProductLoanInterest.Rate)  end  \
		END FLAT_INTEREST_RATE \
	FROM CUProduct  \
	INNER JOIN CUProductLoanInterest ON CUProductLoanInterest.ProductID = CUProduct.ProductID  \
	INNER JOIN CUProductLoan ON CUProductLoan.ProductID = CUProduct.ProductID  \
	INNER JOIN Currency ON CUProduct.CurrencyID=Currency.CurrencyID \
	WHERE GETDATE() between CUProductLoanInterest.StartDate and CUProductLoanInterest.EndDate;

# ===============================
# QUery Branches 
# ===============================

query.select.branches = SELECT BranchID as BRANCHID, Name as NAME, Description as DESCRIPTION ,Code ,SortCode ,AccessAll ,AllowCustomers ,BackOfficeGL ,Active \
      ,AddressID ,BranchPhoneNumber ,BranchFaxNumber ,BranchEmail ,IncrementDays ,UseClosedDaysHolidays ,ClosedDays \
      ,ChequeClearancePersonal ,ChequeClearanceThirdParty ,ParentBranchID ,RegionalManagerID ,GLAccountCode FROM Branches

# ===============================
# QUery Setting address 	 
# ===============================

query.select.settings.address.AddressType =SELECT AddressTypeID ,Name ,PrimaryAddressType  FROM AddressType WHERE active=1

query.select.settings.address.AddressList =SELECT AddressListID ,Name ,ParentAddressListID  FROM AddressList  WHERE active=1

query.select.settings.address.AddressListValue = SELECT a.AddressListValueID ,a.Name ,a.AddressListID ,a.ParentAddressListValueID ,a.Code, a.CUAccountPortfolioId FROM AddressListValue a \
     INNER JOIN AddressList b ON a.AddressListID = b.AddressListID WHERE a.Active = 1 AND b.active = 1

query.select.settings.address.SettingsAddress =SELECT AddressField ,Label ,DefaultText ,DefaultAddressListValueID ,Customer ,UseList ,AddressListID ,Required  FROM SettingsAddress

query.select.settings.address.load =SELECT adr.AddressID,adr.Address1,adr.Address1ID,adr.Address2,adr.Address2ID,adr.Address3,adr.Address3ID, \
        adr.TownCity,adr.TownCityID,adr.County,adr.CountyID,adr.State,  \
        adr.StateID,adr.PostalCode,adr.PostalCodeID,adr.Country,adr.CountryID,adr.Region ,adr.RegionID, \
        link.DateMovedIn, link.DateMovedOut, link.AddressTypeID, typeaddress.PrimaryAddressType, link.CustomerID \
        FROM Address adr , CustomerAddress link , AddressType typeaddress \
		WHERE adr.AddressID=link.AddressID \
		AND link.CustomerID IN (SELECT distinct CustomerID FROM customer) AND link.AddressTypeID=typeaddress.AddressTypeID \
		AND adr.AddressID > :limite ORDER BY adr.AddressID ASC

query.select.address.by.customer =SELECT adr.AddressID,adr.Address1,adr.Address1ID,adr.Address2,adr.Address2ID,adr.Address3,adr.Address3ID, \
        adr.TownCity,adr.TownCityID,adr.County,adr.CountyID,adr.State,  \
        adr.StateID,adr.PostalCode,adr.PostalCodeID,adr.Country,adr.CountryID,adr.Region ,adr.RegionID, \
        link.DateMovedIn, link.DateMovedOut, link.AddressTypeID, typeaddress.PrimaryAddressType, link.CustomerID \
        FROM Address adr , CustomerAddress link , AddressType typeaddress \
		WHERE adr.AddressID=link.AddressID \
		AND link.CustomerID IN (SELECT distinct CustomerID FROM customer) AND link.AddressTypeID=typeaddress.AddressTypeID \
		AND link.CustomerID =:id_customer ORDER BY adr.AddressID ASC
				
# ===============================
# QUery Setting UDF 	 
# ===============================

query.select.settings.udf.UserDefinedFields = SELECT UserDefinedFieldID ABACUS_UDFFIELDID, FIELDNAME, Description, UserDefinedFieldGroupID ABACUS_USFGROUPEID, \
	NUll PARENTUDFFIELDID,	NULL PARENTUDFFIELDVALUE, Mask, UDFType FIELD_TYPE, \
	UserDefinedFieldListID, Mandatory, Active, UniqueField \
    FROM UserDefinedFields \
    WHERE UDFTable IN (1,2,3)

query.select.settings.udf.UserDefinedFieldGroup = SELECT UserDefinedFieldGroupID ABACUS_UDFGROUPEID, Code, Description, \
	CASE WHEN UDFTable IN (2,3) THEN 1 ELSE 0 END LOAN, \
	CASE WHEN UDFTable IN (1,3) THEN 1 ELSE 0 END CUSTOMER, \
	CustomerTypes CUSTOMERTYPE, \
	CASE \
		WHEN AllLoanProducts = 1 THEN (SELECT CONVERT(nvarchar,ProductID) +',' AS [text()]  FROM CUProduct FOR XML PATH('')) \
		ELSE (SELECT CONVERT(nvarchar,ProductID) +',' AS [text()] FROM UserDefinedFieldGroupCUProduct \
		WHERE UserDefinedFieldGroup.UserDefinedFieldGroupID=UserDefinedFieldGroupCUProduct.UserDefinedFieldGroupID FOR XML PATH(''))  \
	END PRODUCTID, Active, UserDefinedFieldGroup.Auto Mandatory , \
	CASE WHEN UDFTable IN (2,3) THEN 'Loan' \
    WHEN UDFTable IN (1,3) THEN 'Customer' ELSE NULL END AS category FROM UserDefinedFieldGroup WHERE UDFTable in (1,2,3); 

query.select.settings.udf.UserDefinedFieldLists =SELECT UserDefinedFieldListID, Name ,Description, Active FROM UserDefinedFieldLists

query.select.settings.udf.UserDefinedFieldListValues =SELECT UserDefinedFieldListValueID,UserDefinedFieldListID ,Name,Description, Active, Score FROM UserDefinedFieldListValues

query.select.udf.loan=SELECT UserDefinedFieldLinkID,CustomerID,CUAccountID,UserDefinedFieldID,Value,ProductID,SurveyID,CUInsurancePolicyID,ReceiptNo, \
                      (SELECT UserDefinedFieldListID FROM UserDefinedFields WHERE UserDefinedFields.UserDefinedFieldID=UserDefinedFieldLinks.UserDefinedFieldID) UserDefinedFieldListID, \
                      BranchID,AddressListValueID,CUCreditLineAccountID,CULoanCollateralID,ComplaintID,CULoanReviewID FROM UserDefinedFieldLinks \
                      WHERE CUAccountID IS NOT NULL AND UserDefinedFieldLinkID >:limite ORDER BY UserDefinedFieldLinkID ASC

query.select.udf.by.loan=SELECT UserDefinedFieldLinkID,CustomerID,CUAccountID,UserDefinedFieldID,Value,ProductID,SurveyID,CUInsurancePolicyID,ReceiptNo, \
                      (SELECT UserDefinedFieldListID FROM UserDefinedFields WHERE UserDefinedFields.UserDefinedFieldID=UserDefinedFieldLinks.UserDefinedFieldID) UserDefinedFieldListID, \
                      BranchID,AddressListValueID,CUCreditLineAccountID,CULoanCollateralID,ComplaintID,CULoanReviewID FROM UserDefinedFieldLinks \
                      WHERE CUAccountID =:cu_account_id ORDER BY UserDefinedFieldLinkID ASC                        

query.select.udf.customer=SELECT UserDefinedFieldLinkID,CustomerID,CUAccountID,UserDefinedFieldID,Value,ProductID,SurveyID,CUInsurancePolicyID,ReceiptNo, \
					  (SELECT UserDefinedFieldListID FROM UserDefinedFields WHERE UserDefinedFields.UserDefinedFieldID=UserDefinedFieldLinks.UserDefinedFieldID) UserDefinedFieldListID, \
                      BranchID,AddressListValueID,CUCreditLineAccountID,CULoanCollateralID,ComplaintID,CULoanReviewID FROM UserDefinedFieldLinks \
                      WHERE CustomerID IS NOT NULL AND UserDefinedFieldLinkID >:limite  ORDER BY UserDefinedFieldLinkID ASC

query.select.udf.by.customer=SELECT UserDefinedFieldLinkID,CustomerID,CUAccountID,UserDefinedFieldID,Value,ProductID,SurveyID,CUInsurancePolicyID,ReceiptNo, \
					  (SELECT UserDefinedFieldListID FROM UserDefinedFields WHERE UserDefinedFields.UserDefinedFieldID=UserDefinedFieldLinks.UserDefinedFieldID) UserDefinedFieldListID, \
                      BranchID,AddressListValueID,CUCreditLineAccountID,CULoanCollateralID,ComplaintID,CULoanReviewID FROM UserDefinedFieldLinks \
                      WHERE CustomerID =:id_customer  ORDER BY UserDefinedFieldLinkID ASC                    
                      
# ===============================
# QUery Setting List Value 	 
# ===============================

query.select.settings.listValues.CUProductLoanReasons =select LoanReasonID ,Code ,Description ,AllProducts ,LoanProductIDs ,DefaultItem ,Active  from CUProductLoanReasons where Active = 1

query.select.settings.listValues.CULoanGuarantorSource =select CULoanGuarantorSourceID ,Code ,Description  ,DefaultItem  ,Active  from CULoanGuarantorSource where Active = 1

query.select.settings.listValues.CULoanSourceOfFunds =select LoanSourceOfFundsID ,Code ,Description ,AllProducts ,LoanProductIDs ,DefaultItem ,Active ,HighLevelSourceFund ,sourceofFundtype ,CurrencyID from CULoanSourceOfFunds where Active = 1

query.select.settings.listValues.CULoanRefinanceReason =select CULoanRefinanceReasonID ,Code ,Description ,AllProducts ,LoanProductIDs ,DefaultItem ,Active from CULoanRefinanceReason where Active = 1
 
query.select.settings.listValues.Relationship =select RelationshipID ,Name ,InverseName ,Directional ,Active from Relationship where Active = 1
 	
query.select.settings.listValues.Industry =select IndustryID ,Name ,DefaultItem ,Active from Industry where Active = 1
 
query.select.settings.listValues.CURole =select CURoleID ,code ,Description ,DefaultItem ,Active ,UniqueRestriction ,IsGroupHead from CURole where Active = 1

query.select.settings.listValues.CULoanDistrictCode =select CULoanDistrictCodeID ,Code ,Description  ,DefaultItem  ,Active  from CULoanDistrictCode where Active = 1

query.select.settings.listValues.DeferredOptions =  select * from MiscellaneousLists where code = 'DeferredOptions' and languageID = '1'

# ===============================
# QUery Fee Repayment	 
# ===============================

query.select.fees = select cufee.Description as Description ,cufee.cufeeID as cufeeID , cufee.code as code  ,CUProductLoan.ProductID  as ProductID   from  CUFee \
left join CUProductLoan ON (CUFee.CUFeeID = CUProductLoan.IssueFeeID OR CUFee.CUFeeID = CUProductLoan.IssueFeeID1 \
OR CUFee.CUFeeID = CUProductLoan.IssueFeeID2 \
OR CUFee.CUFeeID = CUProductLoan.IssueFeeID3)\


query.select.fee.repayment.CUTransaction =SELECT COUNT (*) as ADMIN_FEE \
	FROM CUAccount \
	INNER JOIN CUAccountFee ON CUAccount.CUAccountID=CUAccountFee.CUAccountID \
	INNER JOIN CUProduct on CUAccount.ProductID = CUProduct.ProductID \
	WHERE CUAccountFee.CUFeeID=(SELECT CUFeeID FROM CUFee WHERE code = 'Admin Fee - '+ CUProduct.Code) \
	AND CUAccount.CUAccountID=:id_account AND paid = 1

								
query.select.active.account.customer = SELECT COUNT(*) AS ACTIVE_ACCOUNT FROM CULOAN WHERE STATUS < 64 AND CUSTOMERID=:id_customer  AND PRODUCTID=:id_product AND PAID=0 

query.select.account.portfolio.CUAccountPortfolio = SELECT CUAccountPortfolioID,Description,Active FROM CUAccountPortfolio WHERE Active=1

query.select.paid.account.customer = SELECT ApproveAmountTotal AS LAST_PAID_AMOUNT FROM CULoan WHERE paid = 1 AND CustomerID =:id_customer AND ProductID =:id_product ORDER BY EditDate DESC 

query.select.paid.accounts.customer = SELECT ApproveAmountTotal AS LAST_PAID_AMOUNT FROM CULoan WHERE paid = 1 AND CustomerID =:id_customer ORDER BY EditDate DESC
# ===============================
# QUery Reporting	 
# ===============================
query.reporting.acm.schedules.status=SELECT ACCOUNTNUMBER,GROUPNUMBER,GROUPNAME,CUSTOMERNUMBER,CUSTOMERNAME,CUSTOMERTYPE, \
			CASE \
				WHEN CUSTOMERTYPE = 1 THEN 'Individual' \
				WHEN CUSTOMERTYPE = 4 THEN 'Organisation' \
			ELSE 'Group' END CUSTOMERTYPELABEL \
			,CUSTOMERGENDER, \
			CASE \
				WHEN CUSTOMERGENDER = 0 THEN 'Female' \
			ELSE 'Male' END CUSTOMERGENDERLABEL  \
			,REPAYMENTDATE,INSTALMENTAMOUNT,INSTALMENTPRINCIPAL,INSTALMENTINTEREST,INSTALMENTPRINCIPALPAID \
			,INSTALMENTINTERESTPAID,INSTALMENTTOTALPAID,TOTALPRINCIPALPAID,TOTALINTERESTPAID,TOTALPAIDAMOUNT \
			,UNPAIDPRINCIPAL,UPAIDINTEREST,UPAIDAMOUNT, \
			CASE \
				WHEN LATEDAYS<0 THEN 0 \
			ELSE LATEDAYS END LATEDAYS \
			,NBUNPAIDINSTALMENT,REMAININGPRINCIPAL,REMAININGINTEREST,REMAININGAMOUNT,SOURCEOFFUNDS \
			,(SELECT CULoanSourceOfFunds.Description from CULoanSourceOfFunds WHERE CULoanSourceOfFunds.LoanSourceOfFundsID=ACM_SchedulesStatus.SourceOffunds) SOURCEOFFUNDSLABEL \
			,BRANCHE,(SELECT Branches.Description FROM Branches WHERE Branches.BranchID=ACM_SchedulesStatus.Branche) BRANCHELABEL \
			,LOANOFFICER,(SELECT CUAccountPortfolio.Description FROM CUAccountPortfolio WHERE CUAccountPortfolio.CUAccountPortfolioID=ACM_SchedulesStatus.LoanOfficer) LOANOFFICERLABEL \
			,LOANREASONID,(SELECT CUProductLoanReasons.Description FROM CUProductLoanReasons WHERE CUProductLoanReasons.LoanReasonID=ACM_SchedulesStatus.LoanReasonID) LOANREASONIDLABEL \
			,PRODUCTID,(SELECT CUProduct.Description FROM CUProduct WHERE CUProduct.ProductID=ACM_SchedulesStatus.ProductID) PRODUCTIDLABEL \
			,LOANSTATUS, \
			CASE \
				WHEN LoanStatus=4 THEN 'Normal' \
				WHEN LoanStatus=8 THEN 'Charged off' \
				WHEN LoanStatus=16 THEN 'Bad deb' \
				WHEN LoanStatus=32 THEN 'Transferred' \
			ELSE 'Cancelled' END LOANSTATUSLABEL \
			,ISSUEDATE \
			FROM ACM_SchedulesStatus
			
#============================
#QUery cancelReasons
#============================
query.select.all.abacus.cancelReasons=SELECT CancelReasonID, Code, Description , Active from CULoanCancelReasons

# ===============================
# QUery Application Fee	 
# ===============================

query.select.application.fee =SELECT COUNT (*) as APPLICATION_FEE \
	FROM CUAccount \
	INNER JOIN CUAccountFee ON CUAccount.CUAccountID=CUAccountFee.CUAccountID \
	INNER JOIN CUProduct on CUAccount.ProductID = CUProduct.ProductID \
	WHERE CUAccountFee.CUFeeID in (SELECT CUFeeID FROM CUFee WHERE FeeType = '16385') \
	AND CUAccount.CUAccountID=:id_account AND paid = 1

# ===============================
# QUery Application Fee	 
# ===============================
query.select.check.fee =SELECT COUNT (*) as FEE \
	FROM CUAccount \
	INNER JOIN CUAccountFee ON CUAccount.CUAccountID=CUAccountFee.CUAccountID \
	INNER JOIN CUProduct on CUAccount.ProductID = CUProduct.ProductID \
	WHERE CUAccountFee.CUFeeID in (:lstIds) \
	AND CUAccount.CUAccountID=:id_account AND paid = 0 
# ===============================
# QUery I-SCORE
# ===============================

query.select.i-score = SET LANGUAGE us_english;   \
SET ANSI_NULLS ON ; \
SET QUOTED_IDENTIFIER ON ; \
DROP TABLE IF EXISTS dbo.OutstandingREQ; \
DROP TABLE IF EXISTS dbo.TempSectorACM; \
 \
select * into TempSectorACM from ACM_TAMKEEN.dbo.Sector_ACM; \
 \
Select * into dbo.OutstandingREQ from  (   \
SELECT CUAccount.AccountNumber, Customer.Name, max(Balance) Balance, CUAccount.ProductID, CUTransaction.CurrencyID  \
	FROM CUTransaction   \
	INNER JOIN CUAccount ON CUAccount.CUAccountID = CUTransaction.CUAccountID   \
	INNER JOIN Customer ON Customer.CustomerID = CUAccount.CustomerID   \
	WHERE cast (CUTransaction.ValueDate as date) <=  :dateEnd \
	 AND CUTransaction.TransactionTypeID = 8    \
	 AND CUTransaction.ReversalReceiptNo = 0  AND CUAccount.Active in ( 1,0 )  \
	 and CUAccount.AccountNumber not in ( SELECT CUAccount.AccountNumber  \
		FROM CUTransaction  \
		INNER JOIN CUAccount ON CUAccount.CUAccountID = CUTransaction.CUAccountID  \
		INNER JOIN Customer ON Customer.CustomerID = CUAccount.CustomerID  \
		 AND CUTransaction.TransactionTypeID =4   \
		 AND CUTransaction.ReversalReceiptNo = 0  AND CUAccount.Active in ( 1,0 )  \
		 WHERE cast (CUTransaction.ValueDate as date) <= :dateEnd  )   \
	 GROUP BY CUAccount.AccountNumber,Customer.Name,CUAccount.ProductID,CUTransaction.CurrencyID   \
 union all   \
 SELECT CUAccount.AccountNumber, Customer.Name, MIN(Balance) Balance, CUAccount.ProductID, CUTransaction.CurrencyID  \
	FROM CUTransaction   \
	INNER JOIN CUAccount ON CUAccount.CUAccountID = CUTransaction.CUAccountID  \
	INNER JOIN Customer ON Customer.CustomerID = CUAccount.CustomerID  \
	 WHERE cast (CUTransaction.ValueDate as date) <= :dateEnd    \
	 AND CUTransaction.TransactionTypeID =4   \
	 AND CUTransaction.ReversalReceiptNo = 0  AND CUAccount.Active in ( 1 ,0)  \
	 GROUP BY CUAccount.AccountNumber,Customer.Name,CUAccount.ProductID,CUTransaction.CurrencyID  \
 UNION ALL   \
 SELECT CUAccount.AccountNumber,Customer.Name,MIN(Balance) Balance ,CUAccount.ProductID,CUTransaction.CurrencyID  \
	FROM CUTransaction  \
	INNER JOIN CUAccount ON CUAccount.CUAccountID = CUTransaction.CUAccountID  \
	INNER JOIN Customer ON Customer.CustomerID = CUAccount.CustomerID  \
	WHERE cast (CUTransaction.ValueDate as date) <= :dateEnd  \
	AND CUTransaction.TransactionTypeID =4   \
	AND CUTransaction.TransactionSourceID =4   \
	AND CUTransaction.ReversalReceiptNo != 0  AND CUAccount.Active in ( 1 ,0)  \
	GROUP BY CUAccount.AccountNumber,Customer.Name,CUAccount.ProductID,CUTransaction.CurrencyID  \
) OutstREQ ; \
	 \
select I_SCORE_LOAN,I_SCORE_CUSTOMER  \
	from ( select CUAccount.AccountNumber,  CONCAT('CNCS|','MF00180001|',RIGHT('000' + RTRIM(CUAccount.BranchID), 4),'|',RIGHT ('0000'+ RTRIM (CUAccount.AccountNumber),16)  \
	,'|',Right ('000000000000000'+RTRIM(Customer.CustomerID),16),'|','|','|',ACM_CUSTOMER.IDENTITY_NUMBER,'|','|','|','|','|','|','|','|','|','|','002|','|','|','|','|'  \
	,'|',(REPLACE(ACM_CUSTOMER.CUSTOMER_NAME ,'|','  ') ),'|','|','|','|','|','|','|','001|','|','|','|','|',(Address1),'|','|','|',  \
	'|','|',(TownCity),'|','|054','|','|','|','|','|','|','|','|','|','|','|','|','|','|','|','|',ACM_CUSTOMER.TELEPHONE_1  \
	,'|','|',SUBSTRING(IDENTITY_NUMBER,4,2),SUBSTRING(IDENTITY_NUMBER,6,2),year(ACM_CUSTOMER.DATE_OF_BIRTH)  \
	,'|',case when ACM_CUSTOMER.GENDER='M' THEN '001' when ACM_CUSTOMER.GENDER='F' THEN '002' ELSE '0' END   \
	,'|054|',case when ACM_CUSTOMER.MARITAL_STATUS='M' THEN '002' when ACM_CUSTOMER.GENDER='S' THEN '001' ELSE '003' END  \
	,'|002|','|','|','|','|') COLLATE SQL_Latin1_General_CP1_CI_AS as I_SCORE_CUSTOMER  \
	FROM CUAccount  \
	INNER JOIN CUloan ON CUloan.CUAccountID = CUAccount.CUAccountID  \
	INNER JOIN CUloanPart ON CUloan.CUloanID = CUloanPart.CUloanID  \
	INNER JOIN Customer ON Customer.CustomerID=CUAccount.CustomerID  \
	INNER JOIN CustomerAddress ON CustomerAddress.CustomerID = Customer.CustomerID  \
	LEFT JOIN Address ON Address.AddressID =CustomerAddress.AddressID  \
	INNER JOIN ACM_TAMKEEN.dbo.ACM_CUSTOMER ON ACM_TAMKEEN.dbo.ACM_CUSTOMER.CUSTOMER_ID_EXTERN =Customer.CustomerID  \
	WHERE CUAccount.ParentAccountID IS NULL AND CULoan.status in (4,16,8,128) AND CommunityCUloanID IS NULL  \
		AND ParentAccountID is null   \
		AND (dbo._IsPrimaryAddressType(CustomerAddress.AddressTypeID) = 1)  \
		AND BalanceDate >= :dateStart and ApplyDate <= :dateEnd  \
	) CUST_QUERY  \
	FULL JOIN ( select  CUAccount.AccountNumber,CONCAT('CNCF|','MF00180001|','|',RIGHT('000' + RTRIM(CUAccount.BranchID), 4) ,'|','|',RIGHT ('0000'+ RTRIM (CUAccount.AccountNumber),16),'|','004|','01019999|'  \
	,'|','|','|',RIGHT('0' + RTRIM(MONTH(CULoanPart.IssueDate)), 2),RIGHT('0' + RTRIM(day(CULoanPart.IssueDate)), 2),year(CULoanPart.IssueDate),'|',cast ((CUloanPart.IssueAmount)as bigint),  \
	'|', (select cast ((TotalRepayment)as bigint ) from CULoanSchedule as loanschedule where loanschedule.CULoanPartID = CULoanPart.CULoanPartID and loanschedule.Period =1)  \
	,'|','|','EGP|','001|','014','|',count (*),'|','001|',right ('0'+rtrim (month(CULoanPart.IssueDate)),2),right ('0'+rtrim(day(CULoanPart.IssueDate)),2),year(CULoanPart.IssueDate)  \
	,'|',cast (OutstandingREQ.Balance as bigint)  ,'|',( select  cast (Amount as bigint) FROM Iscore_report where Iscore_report.AccountNumber = CUAccount.AccountNumber  and cast (transactiondate as date) <= :dateEnd  )   \
	,'|',coalesce((select cast ((sum (TotalRepayment)-sum(LoanRepaymentPaid+InterestAmtPaid )) as bigint) from CULoanSchedule SCH WHERE SCH.CULoanPartID =CULoanPart.CULoanPartID AND SCH.RepaymentDate <= :dateEnd and SCH.LoanRepaymentPaid<SCH.LoanRepayment ) ,0 )  \
	,'|',coalesce((select datediff(day,  MIN (RepaymentDate) , getdate())  from CULoanSchedule SCH WHERE SCH.CULoanPartID =CULoanPart.CULoanPartID AND SCH.RepaymentDate <= :dateEnd and SCH.LoanRepaymentPaid<SCH.LoanRepayment ) ,0 )  \
	,'|',(select count (*) from CULoanSchedule SCH WHERE SCH.CULoanPartID =CULoanPart.CULoanPartID AND SCH.RepaymentDate <= :dateEnd and SCH.LoanRepaymentPaid<SCH.LoanRepayment )   \
	,'|',(case when CUAccountRatingID = 1 then '201' when CUAccountRatingID = 2 then '201' when CUAccountRatingID = 3 then '202' when CUAccountRatingID = 4 then '202' when CUAccountRatingID = 5 then '203' else '204' end)  \
	,'|',(case when OutstandingREQ.Balance=0 then '003' when CULoan.status = 16 then '005'else '001'end)   \
	,'|',(select replace (convert(varchar, MAX (transactiondate), 110),'-','') FROM Iscore_report where Iscore_report.AccountNumber = CUAccount.AccountNumber and cast (transactiondate as date) <= :dateEnd  )  \
	,'|','|',(select replace (convert(varchar, MAX (ValueDate), 110),'-','') from Writeoff where Writeoff.AccountNumber = CUAccount.AccountNumber) ,'|' ,'003|',( max([Sector-Iscore]) )  \
	,'|',(select MAX( Amount) from Writeoff where Writeoff.AccountNumber = CUAccount.AccountNumber) ,'|',(case when CULoan.status = 16 then '002' else null end) ,'|','|'  \
	,'001|',(select  replace (convert(varchar, MAX (transactiondate), 110),'-','') FROM Iscore_report where Iscore_report.AccountNumber = CUAccount.AccountNumber and Iscore_report.Balance=0 and CUAccount.Active = 0)  \
	,'|','0|','|','|','|','|','|' ,'|','|','|','|','|','|','|','001','|','|002' \
	COLLATE SQL_Latin1_General_CP1_CI_AS) as I_SCORE_LOAN  \
	FROM CUAccount  \
	INNER JOIN CUloan ON CUloan.CUAccountID = CUAccount.CUAccountID  \
	INNER JOIN CUloanPart ON CUloan.CUloanID = CUloanPart.CUloanID  \
	INNER JOIN CULoanSchedule on CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID \
	INNER JOIN OutstandingREQ ON CUAccount.AccountNumber=OutstandingREQ.AccountNumber  \
	left join TempSectorACM on CUAccount.AccountNumber COLLATE SQL_Latin1_General_CP1_CI_AS = TempSectorACM.AccountNumber COLLATE SQL_Latin1_General_CP1_CI_AS \
	WHERE CUAccount.ParentAccountID IS NULL AND CULoan.status in (4,8,16,128)AND CommunityCUloanID IS NULL  \
		AND CUAccount.Active in(0,1) and ParentAccountID is null 	  \
		AND BalanceDate >= :dateStart and ApplyDate <= :dateEnd  \
	GROUP BY CUAccount.AccountNumber,CULoanPart.IssueDate,CULoanPart.IssueAmount,CUAccount.BranchID,OutstandingREQ.Balance,OutstandingREQ.Name,CUAccount.Active,CULoanPart.CULoanPartID,OutstandingREQ.AccountNumber,CUAccountRatingID,CUAccount.CUAccountID,CULoan.status  \
	) LOAN_QUERY On LOAN_QUERY.AccountNumber = CUST_QUERY.AccountNumber  \
	order by LOAN_QUERY.AccountNumber 
#=============
#Expenses Query
#=============
#get GL accounts numbers	
query.select.GL.Account = select number from Account where  CategoryID =:categoryId and BranchID =:branchId
# Get the Journal page id by account number CR/DR
query.select.id.journal.page = select max(JournalPageID) as JournalPageID from JournalEntry, Account where JournalEntry.AccountID = Account.AccountID and Account.Number in (:cr, :dr); 

 
# Get all the collateral types
query.select.settings.listValues.CULoanCollateralType =select CULoanCollateralTypeID ,Code ,Description  ,CollectionPercentage  ,CollectionCost, CanOverrideCollectionData,LoanProductIDs ,DefaultItem,Active  from CULoanCollateralType where Active = 1
 
# Get all CUAccountPortfolioTransferred since CUAccountPortfolioTransferID in parameter
query.select.CUAccountPortfolioTransferred = select * from CUAccountPortfolioTransferred u where CUAccountPortfolioTransferID > :lastCuAccountPortfolioTransferId and u.ToPortfolio not like '' and u.FromPortfolio not like ''
query.select.last.CUAccountPortfolioTransferred = select TOP 1 * from CUAccountPortfolioTransferred u where u.ToPortfolio not like '' and u.FromPortfolio not like '' ORDER BY CUAccountPortfolioTransferID  DESC

# Get branch changed
query.select.get.branchChange = SELECT Branches.Name as BranchName, Branches.Description as BranchDescription,b1.* \
  FROM BranchChange b1 \
  join Branches on b1.BranchID = Branches.BranchID \
  join (SELECT  max(branchchangeID) maxbranchchangeID FROM BranchChange  GROUP BY CustomerID   HAVING COUNT(CustomerID) > 1  ) mod_branch  on b1.BranchChangeID =  mod_branch.maxbranchchangeID \
  where b1.branchchangeID >:lastBranchChangeIdSynchronized




#=============
# Collections Query
#=============
query.select.get.collection =   DROP TABLE IF EXISTS dbo.TempCollectionTable; \
 				WITH TALYS_Collection AS \
                (SELECT  Branches.BranchID BranchID,Branches.Description BranchName,customerType,REPLACE(Person.Forename,'|',' ')+' '+Person.Surname CustomerName,CUAccount.AccountNumber,CUAccount.CustomerID,CUProduct.ProductID , \
                CUProduct.Description ProductName, CUProduct.ProductID Product_ID,  \
                CAST(ISNULL((SELECT TOP 1 CULoanSchedule.RepaymentDate FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND AllPaid=1 ORDER BY RepaymentDate DESC),CULoanPart.IssueDate) AS DATE) LastPaidInstallement, \
   				CAST(ISNULL((SELECT TOP 1 CULoanSchedule.RepaymentDate FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND AllPaid=0 ORDER BY RepaymentDate ASC),CULoanPart.IssueDate) AS DATE) NextInstallement, \
                CAST(ISNULL((SELECT TOP 1 CULoanSchedule.RepaymentDate FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND CONVERT(datetime,RepaymentDate,120)<=CONVERT(datetime,SYSDATETIME(),120) ORDER BY RepaymentDate DESC),CULoanPart.IssueDate) AS DATE) CurrentInstallement, \
                CUAccount.DRAmount-CUAccount.CRAmount Balance, \
                ISNULL((SELECT SUM(CULoanSchedule.LoanRepayment-CULoanSchedule.LoanRepaymentPaid) FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND CONVERT(datetime,RepaymentDate,120)<=CONVERT(datetime,SYSDATETIME(),120) AND AllPaid=0),0) \
                + ISNULL((SELECT SUM(CULoanSchedule.InterestRepayment-CULoanSchedule.InterestAmtPaid) FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND CONVERT(datetime,RepaymentDate,120)<=CONVERT(datetime,SYSDATETIME(),120) AND AllPaid=0),0) UnpaidAmount, \
                ISNULL((SELECT COUNT(*) FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND CONVERT(datetime,RepaymentDate,120)<=CONVERT(datetime,SYSDATETIME(),120) AND AllPaid=0),0) NBUnpaidInstallement, \
                CUAccount.CUAccountPortfolioID,CULoanPart.CULoanPartID, CuloanPart.LoanAmount, CUAccountPortfolio.Description, CULoan.CULoanID CuLoanId, \
                CAST(ISNULL((SELECT TOP 1 CULoanSchedule.RepaymentDate FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND AllPaid=0 \
                ORDER BY RepaymentDate ),CULoanPart.IssueDate) AS DATE) FirstUnPaidInstallement, \
				Currency.DecimalPlaces Currency_Decimal_Places, \
				Currency.Symbol Currency_Symbol, \
                ISNULL((select SUM(InterestAmtPaid + LoanRepaymentPaid) from CULoanSchedule where DATEDIFF(DAY,GETDATE(),RepaymentDate) < 0 and CULoanSchedule.CULoanPartID = \
                CULoanPart.CULoanPartID), 0) + \
                (select SUM (AmountPaid) from CUAccountFee where CUAccountFee.CUAccountID = CUAccount.CUAccountID and Paid = 1) PaidAmount \
                FROM Customer \
                INNER JOIN CustomerPerson ON Customer.CustomerID=CustomerPerson.CustomerID  \
                INNER JOIN Person ON CustomerPerson.PersonID=Person.PersonID  \
                INNER JOIN CUAccount ON Customer.CustomerID=CUAccount.CustomerID  \
                INNER JOIN CULoan ON CULoan.CUAccountID=CUAccount.CUAccountID  \
                INNER JOIN CULoanPart ON CULoanPart.CULoanID=CULoan.CULoanID  \
                INNER JOIN Branches ON Branches.BranchID=CUAccount.BranchID  \
                INNER JOIN CUProduct ON CUProduct.ProductID=CUAccount.ProductID \
				INNER JOIN Currency ON (Currency.CurrencyID = CUProduct.CurrencyID)  \
				INNER JOIN CUAccountPortfolio ON CUAccount.CUAccountPortfolioID = CUAccountPortfolio.CUAccountPortfolioID \
                WHERE CULoan.Status>2 AND CUAccount.Active=1 AND CULoanPart.CurrentPart=1 AND (CUAccount.DRAmount-CUAccount.CRAmount)>0 ) \
                SELECT  \
                ROW_NUMBER() over (order by AccountNumber) as indexrow, \
				CASE \
				WHEN (CustomerType = 1  ) THEN 'INDIV' \
				WHEN (CustomerType = 8  ) THEN 'GRP' \
				WHEN (CustomerType = 4  ) THEN 'ORG' \
				ELSE NULL \
				END CustomerType, \
				CustomerID CustomerIdExtern,CuLoanId, \
				AccountNumber,ProductName, Product_ID  ,CustomerName ,BranchName,BranchID , \
				Currency_Decimal_Places,Currency_Symbol,LoanAmount, \
				Description loanOfficer,FirstUnPaidInstallement, UnpaidAmount, \
                CASE WHEN DATEDIFF(DAY,FirstUnPaidInstallement, \
				CASE WHEN DATEDIFF(DAY,SYSDATETIME(),CurrentInstallement) < 0 THEN CAST(SYSDATETIME() AS DATE) ELSE CurrentInstallement END )<0 THEN 0  \
				ELSE DATEDIFF(DAY,FirstUnPaidInstallement, \
				CASE WHEN DATEDIFF(DAY,SYSDATETIME(),CurrentInstallement) < 0 THEN CAST(SYSDATETIME() AS DATE) ELSE CurrentInstallement END ) END LateDays,NBUnpaidInstallement \
				INTO dbo.TempCollectionTable \
				FROM TALYS_Collection \
				join (	select productID, MinLateDays, MinUnpaidAmount , MinLoanAmount \
					from openjson(:json) \
					with(productID nvarchar(25) '$.productID', \
						 MinLateDays nvarchar(25) '$.MinLateDays', \
						 MinUnpaidAmount nvarchar(25) '$.MinUnpaidAmount', \
						 MinLoanAmount nvarchar(25) '$.MinLoanAmount') \
				)	setting on setting.productID  = TALYS_Collection.productID \
		WHERE \
		DATEDIFF(DAY,FirstUnPaidInstallement,CASE WHEN DATEDIFF(DAY,SYSDATETIME(),CurrentInstallement) < 0 \
							THEN CAST(SYSDATETIME() AS DATE) ELSE CurrentInstallement END ) > setting.MinLateDays \
		and UnpaidAmount > setting.MinUnpaidAmount \
		and LoanAmount > setting.minLoanAmount  \
		order by AccountNumber ; \
		select count(*) as countColl from dbo.TempCollectionTable; \

#=============
# Topup Query
#=============
query.select.setting.topup.validity = WITH Late_Days_on_Firste_Unpaid_installement AS  \
                (SELECT    \
                CULoanPart.CULoanPartID,  \
             CULoan.CULoanID, CULoan.ProductID, \
               CAST((SELECT TOP 1 CULoanSchedule.RepaymentDate FROM CULoanSchedule WHERE CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID AND AllPaid=0 \
                ORDER BY RepaymentDate ) AS DATE) FirstUnPaidInstallement  \
            FROM CULoan              \
              INNER JOIN CULoanPart ON CULoanPart.CULoanID=CULoan.CULoanID  \
                WHERE CULoan.CustomerID = :id_customer  \
                group by CULoanPart.CULoanPartID, CULoan.CULoanID, CULoan.ProductID)  \
select  setting.MinBr4, \
( select case when countIssuedLoan < setting.MinBr4 then 0 else 1 end from(select count(*) as countIssuedLoan from CULoan where CULoan.Status = 4 and CULoan.CustomerID = :id_customer)f  \
)as br4, \
(select case when payed_percentage< setting.MinBr0 then 0 else 1 end  from \
(select  100*sum(LoanRepaymentPaid)/sum(loanRepayment) as payed_percentage  from CULoanSchedule   \
inner join CULoanPart ON CULoanPart.CULoanPartID=CULoanSchedule.CULoanPartID  \
INNER JOIN CULoan ON CULoan.CULoanID=CULoanPart.CULoanID       \
where CULoan.CULoanID =:id_loan \
group by CULoanSchedule.CULoanPartID  )as br0)as br0 , \
( \
select sum (case when Max_late_days > MaxContinuousLateDaysBr1 or Separete_late_days > MaxSeparateLateDaysBr1 then 1 else 0 end) as br1 from ( \
select CULoanPartID, max(Late_Days) as Max_late_days, sum (Late_Days) as Separete_late_days, max(MaxContinuousLateDaysBr1) as MaxContinuousLateDaysBr1, max(MaxSeparateLateDaysBr1) as MaxSeparateLateDaysBr1 \
from ( \
SELECT       \
CULoanPart.CULoanPartID, CULoan.ProductID, \
CASE WHEN DATEDIFF(DAY,CULoanSchedule.RepaymentDate,dbo.ACM_GETRealRepaymentDate(CUAccount.CUAccountID,CULoanPart.CULoanPartID,CULoanSchedule.Period,CULoanSchedule.RepaymentDate))<0 THEN 0     \
ELSE DATEDIFF(DAY,CULoanSchedule.RepaymentDate,dbo.ACM_GETRealRepaymentDate(CUAccount.CUAccountID,CULoanPart.CULoanPartID,CULoanSchedule.Period,CULoanSchedule.RepaymentDate)) END Late_Days       \
FROM CUAccount   \
INNER JOIN CULoan ON CULoan.CUAccountID=CUAccount.CUAccountID       \
INNER JOIN CULoanPart ON CULoanPart.CULoanID=CULoan.CULoanID   \
INNER JOIN CULoanSchedule ON CULoanSchedule.CULoanPartID=CULoanPart.CULoanPartID  \
WHERE   \
CULoanSchedule.AllPaid = 1 AND   \
CULoan.CustomerID=:id_customer \
UNION ALL  \
SELECT  \
CULoanPartID, ProductID, \
Case when DATEDIFF(DAY, FirstUnPaidInstallement, CAST(SYSDATETIME() AS DATE)) > 0 then \
DATEDIFF(DAY, FirstUnPaidInstallement, CAST(SYSDATETIME() AS DATE)) else 0 end  Seperate_Late_Days \
FROM Late_Days_on_Firste_Unpaid_installement \
) LT \
join (select ProductID, MinBr4,MinBr0,MaxContinuousLateDaysBr1,MaxSeparateLateDaysBr1 from openjson(:json)with( \
ProductID integer '$.ProductId', \
MinBr4 decimal(4,2) '$.MinBr4',  \
MinBr0 decimal(4,2) '$.MinBr0',  \
MaxContinuousLateDaysBr1 integer '$.MaxContinuousLateDaysBr1',  \
MaxSeparateLateDaysBr1 integer '$.MaxSeparateLateDaysBr1'  \
)) setting2 on  LT.ProductID = setting2.ProductID \
group by CULoanPartID  \
)f) as br1 \
from \
 (select ProductID, MinBr4,MinBr0 from openjson(:json)with( \
ProductID integer '$.ProductId', \
MinBr4 decimal(4,2) '$.MinBr4',  \
MinBr0 decimal(4,2) '$.MinBr0' \
)) setting  \
where setting.ProductID =:product_id; \

query.select.settings.creditAcount=select AccountID,Number from Account where active = 1 and MainAccountID is null and number like :account ;
query.select.settings.mainAcount=select * from Account where MainAccountID = :accountId and BranchID = :branchId ;
# Get account id
query.select.get.AccountId = select  AccountID from Account where Number =:number and BranchID=:branchId
# get journals
query.select.get.journals = select Description, JournalID from Journal where active = 1 and (CreditAccountID is null or CreditAccountID=0) and (DebitAccountID is null or DebitAccountID=0) and Source=1;
#get id fee by account id
query.select.cuFeeId = select CUFeeID from CUAccountFee \
inner join CUProductLoanDisbursementFee On CUProductLoanDisbursementFee.IssueFee = CUAccountFee.CUFeeID \
where  CUProductLoanDisbursementFee.IssueFeePayment = 1 and CUAccountFee.Paid = 0 and CUAccountID = :idAccount ; 
query.select.loan.details.informations= SELECT CL.CULoanID AS [Loan ID], \
    (SUM(CLS.InterestRepayment)+SUM(CLS.LoanRepayment))-(SUM(CLS.LoanRepaymentPaid) + SUM(CLS.InterestAmtPaid)) AS [Remaining Amount], \
    CAST(CLP.InitialPaymentDate AS DATE) AS [First Repayment Date],  \
    CLP.EffectiveIntRate AS [IRR],  \
    CLP.APR AS [APR],  \
    CLP.IssueFeeAmount AS [Total Fees], \
    (CA.DRAmount - CA.CRAmount) AS [Balance], \
    LR.code AS [Loan Reason], \
    CASE CL.Status \
        WHEN 1 THEN 'Applied' \
        WHEN 2 THEN 'Approved' \
        WHEN 4 THEN 'Issued' \
        WHEN 8 THEN 'Charged Off' \
        WHEN 16 THEN 'Bad Debt' \
        WHEN 32 THEN 'Transferred' \
        WHEN 64 THEN 'Cancelled' \
        WHEN 128 THEN 'Reversed' \
        WHEN 256 THEN 'On-Time Repaid' \
        WHEN 512 THEN 'Overdue' \
        WHEN 1024 THEN 'Rescheduled' \
        WHEN 2048 THEN 'Deal' \
        WHEN 4096 THEN 'Rejected' \
        WHEN 8192 THEN 'Prospect'\
    END AS Status, \
    CLP.LoanAmount AS [Principal], \
    SUM(CLS.LoanRepaymentPaid) AS [Principal Paid], \
    SUM(CLS.InterestRepayment) AS [Profit], \
    SUM(CLS.InterestAmtPaid) AS [Profit Paid], \
    SUM(CLS.LoanRepaymentPaid) + SUM(CLS.InterestAmtPaid) AS [Total Paid] \
FROM CULoanSchedule CLS \
INNER JOIN CULoanPart CLP ON CLP.CULoanPartID = CLS.CULoanPartID \
INNER JOIN CULoan CL ON CL.CULoanID = CLP.CULoanID \
INNER JOIN CUAccount CA ON CA.CUAccountID = CL.CUAccountID \
INNER JOIN CUProductLoanReasons  LR on LR.LoanReasonID = CL.LoanReasonID \
WHERE CA.ParentAccountID IS NULL and CL.CULoanID=:id_loan \
GROUP BY \
    CL.CULoanID, \
    CA.CRAmount, \
    CA.DRAmount, \
    CLP.InitialPaymentDate, \
    CLP.EffectiveIntRate, \
    CLP.APR, \
    CLP.IssueFeeAmount, \
    CL.Status, \
    CLP.LoanAmount, \
    LR.code \
HAVING SUM(CLS.InterestAmtPaid) IS NOT NULL \
   AND SUM(CLS.InterestRepayment) IS NOT NULL \
   AND SUM(CLS.LoanRepaymentPaid) IS NOT NULL \
ORDER BY CL.CULoanID DESC; \
